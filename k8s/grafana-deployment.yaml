apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: spaceshield
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090
      access: proxy
      isDefault: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spaceshield-dashboard
  namespace: spaceshield
data:
  spaceshield.json: |
    {
      "dashboard": {
        "id": null,
        "title": "SpaceShield (Debris-Tracker) Monitoring",
        "tags": ["spaceshield", "debris-tracker"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Application Health Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"spaceshield-backend\"}",
                "legendFormat": "Backend"
              },
              {
                "expr": "up{job=\"spaceshield-frontend\"}",
                "legendFormat": "Frontend"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "HTTP Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_server_requests_seconds_count{job=\"spaceshield-backend\"}[5m])",
                "legendFormat": "Requests/sec"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Response Time (95th percentile)",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_server_requests_seconds_bucket{job=\"spaceshield-backend\"}[5m]))",
                "legendFormat": "95th percentile"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "JVM Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "jvm_memory_used_bytes{job=\"spaceshield-backend\", area=\"heap\"}",
                "legendFormat": "Heap Memory"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: spaceshield
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "spaceshield123"
        - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
          value: "/etc/grafana/provisioning/dashboards/spaceshield.json"
        volumeMounts:
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
      volumes:
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: spaceshield-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: spaceshield
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30302
  selector:
    app: grafana
